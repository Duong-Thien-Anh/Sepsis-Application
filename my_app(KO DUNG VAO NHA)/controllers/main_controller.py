import tkinter as tk
from tkinter import messagebox
from models.data_models import load_users

class MainController:
    def __init__(self, view):
        self.view = view
        self.users = load_users()
        self.is_password_visible = tk.BooleanVar(value=False)

    def handle_login(self):
        
        """X·ª≠ l√Ω s·ª± ki·ªán ƒëƒÉng nh·∫≠p."""
        print(f"Users data type: {type(self.users)}")
        print(f"Users data: {self.users}")

        username = self.view.username_entry.get()
        password = self.view.password_entry.get()

        if username == "T√™n ƒëƒÉng nh·∫≠p" or password == "M·∫≠t kh·∫©u":
            messagebox.showerror("Login", "Vui l√≤ng nh·∫≠p t√™n ƒëƒÉng nh·∫≠p v√† m·∫≠t kh·∫©u.")
            return

        user = next((u for u in self.users if u["username"] == username), None)
        if user and user["password"] == password:
            messagebox.showinfo("Login", "Login successful!")
            self.open_home_gui()
        else:
            messagebox.showerror("Login",   "Invalid username or password.")

    #H√†m x·ª≠ l√Ω placeholder ƒë·ªông
    @staticmethod
    def setup_placeholder(entry, placeholder_text, is_password=False):
        def on_entry_click(event):
            """X√≥a placeholder khi nh·∫•p v√†o tr∆∞·ªùng nh·∫≠p li·ªáu."""
            if event.widget.get() == placeholder_text:
                event.widget.delete(0, "end")  # X√≥a n·ªôi dung
                event.widget.config(fg='black')  # ƒê·∫∑t m√†u ch·ªØ th√†nh ƒëen
                if is_password:
                    event.widget.config(show="*")

        def on_focus_out(event):
            """ƒê·∫∑t l·∫°i placeholder n·∫øu tr∆∞·ªùng nh·∫≠p li·ªáu tr·ªëng."""
            if event.widget.get() == "":
                event.widget.insert(0, placeholder_text)
                event.widget.config(fg='grey')  # ƒê·∫∑t m√†u ch·ªØ th√†nh x√°m
                if is_password:
                    event.widget.config(show="")
            else:
                # Khi c√≥ d·ªØ li·ªáu, n·∫øu l√† password, th√¨ ·∫©n k√Ω t·ª±
                if is_password:
                    entry.config(show="*")
                entry.config(fg='black')
               
        # Kh·ªüi t·∫°o placeholder
        entry.insert(0, placeholder_text)
        entry.config(fg='grey')

        if is_password:
            entry.config(show="")  # kh√¥ng ·∫©n k√Ω t·ª± khi hi·ªÉn th·ªã placeholder

        # G·∫Øn s·ª± ki·ªán
        entry.bind("<FocusIn>", on_entry_click)
        entry.bind("<FocusOut>", on_focus_out)

    #Bi·∫øn tr·∫°ng th√°i hi·ªán ·∫©n 
    def toggle_password(self,password_entry, toggle_button):
        current_text = password_entry.get()
        if current_text == "M·∫≠t kh·∫©u":
            return
        if self.is_password_visible.get(): 
            password_entry.config(show="*")
            toggle_button.config(text="üëÅ")
            self.is_password_visible.set(False)
        else:
            password_entry.config(show="")
            toggle_button.config(text="·∫®n")
            self.is_password_visible.set(True)
            
    # T·∫°o hi·ªáu ·ª©ng khi di chu·ªôt qua text
    @staticmethod
    def apply_hover_effect_text(label, hover_color="red", normal_color="#57a1f8"):
        def on_enter(e):
            label['fg'] = hover_color

        def on_leave(e):
            label['fg'] = normal_color

        label.bind("<Enter>", on_enter)
        label.bind("<Leave>", on_leave)   

    def open_home_gui(self):
        """M·ªü giao di·ªán ch√≠nh sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng"""
        try:
            from views.Home_Gui import HomeGui
            
            # ƒê√≥ng c·ª≠a s·ªï ƒëƒÉng nh·∫≠p hi·ªán t·∫°i
            login_window = self.view.master

            # T·∫°o c·ª≠a s·ªï m·ªõi cho HomeGui
            main_window = tk.Tk()
            main_window.title("H·ªá th·ªëng qu·∫£n l√Ω b·ªánh nh√¢n nhi·ªÖm tr√πng huy·∫øt")
            main_window.configure(bg="#fff")
            main_window.resizable(False, False)
            
            # K√≠ch th∆∞·ªõc c·ª≠a s·ªï
            window_width = 1400
            window_height = 700
            
            # L·∫•y k√≠ch th∆∞·ªõc m√†n h√¨nh
            screen_width = main_window.winfo_screenwidth()
            screen_height = main_window.winfo_screenheight()
            
            # T√≠nh to√°n v·ªã tr√≠ ƒë·ªÉ cƒÉn gi·ªØa
            center_x = int((screen_width - window_width) / 2)
            center_y = int((screen_height - window_height) / 3)
            
            main_window.geometry(f"{window_width}x{window_height}+{center_x}+{center_y}")

            # Kh·ªüi t·∫°o HomeGui
            home_gui = HomeGui(main_window)

            # ƒê√≥ng c·ª≠a s·ªï ƒëƒÉng nh·∫≠p
            login_window.destroy()
            
        except Exception as e:
            messagebox.showerror("L·ªói", f"Kh√¥ng th·ªÉ m·ªü giao di·ªán ch√≠nh: {str(e)}")
